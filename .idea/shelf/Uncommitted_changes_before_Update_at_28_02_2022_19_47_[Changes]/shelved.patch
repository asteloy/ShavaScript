Index: src/components/User/Order/OrderItem.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\r\n\r\nfunction OrderItem(props) {\r\n    let cartItem = props.props\r\n\r\n    return (\r\n        <figure>\r\n            <img src={cartItem.imageUrl} height=\"150\" width=\"150\" alt=\"\"></img>\r\n            <figcaption className=\"text-center\">{cartItem.name}</figcaption>\r\n            <figcaption className=\"text-center\">{cartItem.count} x</figcaption>\r\n        </figure>\r\n    )\r\n}\r\n\r\nexport default OrderItem;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/User/Order/OrderItem.jsx b/src/components/User/Order/OrderItem.jsx
--- a/src/components/User/Order/OrderItem.jsx	(revision f0249d4720a0914158aef4f131b58a1a32ff26ff)
+++ b/src/components/User/Order/OrderItem.jsx	(date 1646064404202)
@@ -5,7 +5,7 @@
 
     return (
         <figure>
-            <img src={cartItem.imageUrl} height="150" width="150" alt=""></img>
+            <img src={cartItem.image} height="150" width="150" alt=""></img>
             <figcaption className="text-center">{cartItem.name}</figcaption>
             <figcaption className="text-center">{cartItem.count} x</figcaption>
         </figure>
Index: src/components/User/Product/ProductList.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import useFetch from \"../../../hook/useFetch\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport ModalShava from \"../../modals/ModalShava\";\r\n\r\n\r\nfunction ProductList(props) {\r\n    const {cookies, setCookie} = props.cookies;\r\n\r\n    const {isLoading, serverError, apiData} = useFetch(\r\n        \"GET\",\r\n        \"https://shrouded-lake-15223.herokuapp.com/product/all\",\r\n        {}\r\n    )\r\n\r\n    const [data, setData] = useState([])\r\n\r\n    const [cart, setCart] = useState([])\r\n\r\n    function countProduct(productId) {\r\n        const productInCart = cookies.cart.find(item => item.id === productId)\r\n        if (productInCart) return productInCart.count\r\n    }\r\n\r\n    function addToCart(product) {\r\n        setCart([...cart, {...product, quantity: 1}])\r\n        const productIsCart = cookies.cart.some(item => item.id === product.id)\r\n\r\n        if (productIsCart) {\r\n            const cartItems = cookies.cart.map(item => item.id === product.id ? {...item, count: ++item.count} : item);\r\n            setCookie('cart', [...cartItems], {path: '/'})\r\n        } else {\r\n            setCookie('cart', [...cookies.cart, {...product, count: 1}], {path: '/'})\r\n        }\r\n        console.log(cookies)\r\n    }\r\n\r\n    function removeCart(product) {\r\n        const cartItems = cookies.cart.map(item => item.id === product.id ? {...item, count: --item.count} : item);\r\n        const productInCart = cookies.cart.find(item => item.id === product.id)\r\n        if (productInCart.count === 0) {\r\n            return setCookie('cart', cookies.cart.filter(item => item.id !== productInCart.id), {path: '/'})\r\n        }\r\n        setCookie('cart', [...cartItems], {path: '/'})\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!cookies.cart) setCookie('cart', [], {path: '/'});\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!isLoading && apiData) setData(apiData)\r\n        console.log(apiData)\r\n    }, [isLoading])\r\n\r\n    if (isLoading && !apiData) {\r\n        return <div>\r\n            loading...\r\n        </div>\r\n    } else {\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-4 row-cols-lg-4\">\r\n                        {\r\n                            data.map(product => {\r\n                                if (product.category !== 'toping') {\r\n                                    return <ProductCard\r\n                                        key={product.id}\r\n                                        product={product}\r\n                                        addToCart={addToCart}\r\n                                        removeCart={removeCart}\r\n                                        countProduct={countProduct}\r\n                                        cookies={cookies}\r\n                                        setCookie={setCookie}\r\n                                    />\r\n                                }\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <ModalShava/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductList;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/User/Product/ProductList.jsx b/src/components/User/Product/ProductList.jsx
--- a/src/components/User/Product/ProductList.jsx	(revision f0249d4720a0914158aef4f131b58a1a32ff26ff)
+++ b/src/components/User/Product/ProductList.jsx	(date 1646064231275)
@@ -1,8 +1,6 @@
 import useFetch from "../../../hook/useFetch";
 import React, {useEffect, useState} from "react";
 import ProductCard from "./ProductCard";
-import ModalShava from "../../modals/ModalShava";
-
 
 function ProductList(props) {
     const {cookies, setCookie} = props.cookies;
@@ -79,9 +77,6 @@
                         }
                     </div>
                 </div>
-
-
-                <ModalShava/>
             </>
         )
     }
Index: src/components/User/Cart/CartItem.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function CartItem(props) {\r\n\r\n\r\n    return (\r\n        <div className=\"m-3 p-2 col-12 card d-flex flex-row gap-3 justify-content-center align-items-center\" style={{width: '100%'}}>\r\n            <img src={props.imageUrl} width=\"100px\" height=\"100px\" className=\"\" alt=\"...\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{props.name}</h5>\r\n                    <p className=\"card-text\">{props.description}</p>\r\n                    <div className=\"row d-flex flex-row \">\r\n                        <select className=\"mb-3 form-select\" aria-label=\"Default select example\" defaultValue={props.count} onChange={event => props.handleItemQuality(event.target.value, props)}>\r\n                            <option selected disabled>Количество</option>\r\n                            <option value={1}>1</option>\r\n                            <option value={2}>2</option>\r\n                            <option value={3}>3</option>\r\n                            <option value={4}>4</option>\r\n                            <option value={5}>5</option>\r\n                        </select>\r\n                        <button className=\"btn btn-danger\" onClick={() => props.removeCartItem(props)}>Удалить</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-body d-flex justify-content-center align-items-center \">\r\n                    <h5 className=\"card-title\">{+props.count * +props.price} ₽</h5>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/User/Cart/CartItem.jsx b/src/components/User/Cart/CartItem.jsx
--- a/src/components/User/Cart/CartItem.jsx	(revision f0249d4720a0914158aef4f131b58a1a32ff26ff)
+++ b/src/components/User/Cart/CartItem.jsx	(date 1646064404242)
@@ -3,7 +3,7 @@
 
     return (
         <div className="m-3 p-2 col-12 card d-flex flex-row gap-3 justify-content-center align-items-center" style={{width: '100%'}}>
-            <img src={props.imageUrl} width="100px" height="100px" className="" alt="..." />
+            <img src={props.image} width="100px" height="100px" className="" alt="..." />
                 <div className="card-body">
                     <h5 className="card-title">{props.name}</h5>
                     <p className="card-text">{props.description}</p>
Index: src/components/User/Product/ProductCard.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useState} from 'react'\r\nimport Modal from '../../modals/Modal';\r\n\r\nexport default function ProductCard(props) {\r\n    const countProductInCart = props.countProduct(props.product.id) || 0\r\n    //  `${countProductInCart === 5 ? 'disabled' : ''}`\r\n    let onclickFunc;\r\n    if (props.product.name.includes('шаурма')) {\r\n        onclickFunc = () => props.addToCart(props.product);\r\n    } else {\r\n        onclickFunc = () => props.addToCart(props.product);\r\n    }\r\n\r\n    const [custom, setCustom] = useState(false)\r\n\r\n    return (\r\n        <>\r\n        <div className=\"card p-2 m-3 d-flex flex-column justify-content-between\" style={{width: '18rem'}}>\r\n            <img className=\"card-img-top p-3\" style={{height: '18rem'}} src={props.product.imageUrl}\r\n                 alt={props.product.name}/>\r\n            <div className=\"m-2\">\r\n                <h5 className=\"card-title\">{props.product.name}</h5>\r\n                <p className=\"card-text\">{props.product.description}</p>\r\n                <p className=\"card-text\">{props.product.price} ₽</p>\r\n                {countProductInCart > 0 ?\r\n                    <div>\r\n                        <div className=\"btn-group d-flex justify-content-center align-items-lg-center gap-3 mt-3\"\r\n                             role=\"group\" aria-label=\"Basic example\">\r\n                            <button type=\"button\" className=\"btn btn-primary\"\r\n                                    onClick={() => props.removeCart(props.product)}>\r\n                                <i className=\"bi bi-dash\"></i>\r\n                            </button>\r\n                            <p className=\"m-0 p-0 text-center\">{countProductInCart} шт</p>\r\n                            <button type=\"button\" disabled={countProductInCart === 5 ? true : ''}\r\n                                    className=\"btn btn-primary\" onClick={onclickFunc}>\r\n                                <i className=\"bi bi-plus\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <>\r\n                        {props.product.category === \"main\" ?\r\n                        <div>\r\n                            {!custom &&\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => setCustom(prev => !prev)} >\r\n                            Собрать шаурму\r\n                            </button>\r\n                            }\r\n                            {custom && <Modal cookie={props.cookies} setCookie={props.setCookie} setCustom={setCustom} addToCart={props.addToCart} shava={props.product}/>}\r\n                        </div>\r\n                            :\r\n                            <button className=\"btn btn-primary\" onClick={onclickFunc}>В\r\n                                корзину\r\n                            </button>\r\n                        }\r\n                    </>\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/User/Product/ProductCard.jsx b/src/components/User/Product/ProductCard.jsx
--- a/src/components/User/Product/ProductCard.jsx	(revision f0249d4720a0914158aef4f131b58a1a32ff26ff)
+++ b/src/components/User/Product/ProductCard.jsx	(date 1646064172569)
@@ -16,7 +16,7 @@
     return (
         <>
         <div className="card p-2 m-3 d-flex flex-column justify-content-between" style={{width: '18rem'}}>
-            <img className="card-img-top p-3" style={{height: '18rem'}} src={props.product.imageUrl}
+            <img className="card-img-top p-3" style={{height: '18rem'}} src={props.product.image}
                  alt={props.product.name}/>
             <div className="m-2">
                 <h5 className="card-title">{props.product.name}</h5>
